# let
#   pkgs = import <nixpkgs> {};
# in pkgs.mkShell {
#   packages = [
#     (pkgs.python3.withPackages (python-pkgs: [
#       # python-pkgs.pandas
#       python-pkgs.requests
#       python-pkgs.matplotlib
#       python-pkgs.pillow
#       python-pkgs.torchvision
#       python-pkgs.scikit-image
#       python-pkgs.scipy
#       python-pkgs.numpy
#       # python-pkgs.vllm
#       python-pkgs.onnx
#     ]))
#     # ollama
#
#
#
#   ];
#   NIX_LD_LIBRARY_PATH = lib.makeLibraryPath [
#     stdenv.cc.cc
#     zlib
#   ];
#   NIX_LD = lib.fileContents "${stdenv.cc}/nix-support/dynamic-linker";
#   buildInputs = [ python311 ];
#   shellHook = ''
#     export LD_LIBRARY_PATH=$NIX_LD_LIBRARY_PATH
#   '';
#
#   # shellHook = ''
#   #   # fixes libstdc++ issues and libgl.so issues
#   #   LD_LIBRARY_PATH=${pkgs.stdenv.cc.cc.lib}/lib/
#   # '';
#   }
{ pkgs ? import (fetchTarball https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz) {} }:

with pkgs; pkgs.mkShell {
  NIX_LD_LIBRARY_PATH = lib.makeLibraryPath [
    stdenv.cc.cc
    zlib
  ];
  NIX_LD = lib.fileContents "${stdenv.cc}/nix-support/dynamic-linker";
  buildInputs = [ python311 ollama ];
  shellHook = ''
    export LD_LIBRARY_PATH=$NIX_LD_LIBRARY_PATH
  '';
}
